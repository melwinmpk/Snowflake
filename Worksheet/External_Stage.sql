-- CREATING Database

CREATE DATABASE amazonebooks_external;

CREATE SCHEMA CONFIG;

USE SCHEMA CONFIG;

CREATE OR REPLACE TRANSIENT TABLE CONFIG.TABLE_CONFIG (
	TABLE_NAME TEXT,
	LAST_EXTRACT_DATE DATE
);

INSERT INTO CONFIG.TABLE_CONFIG VALUES ('amazone_books','2024-01-01');

UPDATE  CONFIG.TABLE_CONFIG
SET LAST_EXTRACT_DATE = '2024-02-29'
where TABLE_NAME = 'amazone_books';

SELECT * FROM CONFIG.TABLE_CONFIG;

SELECT MAX(business_date) FROM PUBLIC.amazone_books;
SELECT * FROM amazone_books;

CREATE OR REPLACE TRANSIENT TABLE CONFIG.TBL_PRIMARY_KEY (
	TABLE_NAME TEXT,
	PRIMARY_COLUMN TEXT,
	ORDINAL_POSITION NUMBER(38,0),
	STAGE_POSITION NUMBER(38,0)
);

INSERT INTO CONFIG.TBL_PRIMARY_KEY VALUES ('amazone_books', 'BOOK_ID',1,1);

select * from CONFIG.TBL_PRIMARY_KEY;

DROP TABLE CONFIG.TABLE_CONFIG;

DROP TABLE CONFIG.TBL_PRIMARY_KEY;

-- Creating Storage Integration
-- Its for providing access to the S3 bucket for External Stage Tables
-- Need to create a Role having S3 read Access


CREATE OR REPLACE STORAGE INTEGRATION ACCESS_TO_S3BUCKET
TYPE=EXTERNAL_STAGE
STORAGE_PROVIDER='S3'
STORAGE_AWS_ROLE_ARN='arn:aws:iam::533267410818:role/S3_read_access_for_snowflake'
ENABLED=TRUE
STORAGE_ALLOWED_LOCATIONS=('s3://lz-snowflake/Snowflake/');

DESC INTEGRATION ACCESS_TO_S3BUCKET;

-- Creating a Stage Table 
-- Note: STORAGE_INTEGRATION is mentioned to provide the privileges to access the s3 bucket

CREATE OR REPLACE STAGE amazone_books_ext_stage
url='s3://lz-snowflake/Snowflake/amazonebooks_external/amazone_books/'
file_format = (type = 'CSV' field_delimiter = ',' field_optionally_enclosed_by = '"' skip_header = 1)
STORAGE_INTEGRATION = ACCESS_TO_S3BUCKET;

-- 

REMOVE @amazone_books_ext_stage;

REFRESH @amazone_books_ext_stage;

LIST @amazone_books_ext_stage;

Select METADATA$FILENAME as FileName FROM @amazone_books_ext_stage;

Select METADATA$FILENAME as FileName , split_part(METADATA$FILENAME,'/',4) as Partition_Name FROM @amazone_books_ext_stage limit 10;


CREATE OR REPLACE EXTERNAL TABLE AMAZONE_BOOKS_EXT(
	BOOK_ID NUMBER(38, 0) AS (value:c1::INTEGER)
	,BOOK_TITLE VARCHAR(16777216) AS (value:c2::TEXT)
	,BOOK_AMOUNT FLOAT AS (value:c3::FLOAT)
	,BOOK_AUTHOR VARCHAR(16777216) AS (value:c4::TEXT)
	,BOOK_RATING FLOAT AS (value:c5::float)
	,BOOK_LINK VARCHAR(16777216) AS (value:c6::TEXT)
	,BUSINESS_DATE DATE AS TO_DATE(value:c7::VARCHAR,'YYYY-MM-DD')
    ,FILE_DATE_PARTITION NUMBER(10,0) as (split_part(METADATA$FILENAME,'/',4)::int)
)
PARTITION BY (FILE_DATE_PARTITION)
WITH LOCATION = @amazone_books_ext_stage
FILE_FORMAT = (TYPE = CSV field_delimiter = ',' field_optionally_enclosed_by = '"'  SKIP_HEADER = 1);

ALTER EXTERNAL TABLE IF EXISTS AMAZONE_BOOKS_EXT REMOVE FILES  ( '20240301/20240301-amazone-books.csv' );

-- PARTITION BY (file_date_partition)
SELECT * FROM AMAZONE_BOOKS_EXT;

SELECT DISTINCT BUSINESS_DATE FROM AMAZONE_BOOKS_EXT;



SHOW COLUMNS IN TABLE AMAZONE_BOOKS_EXT; 

CREATE OR REPLACE TRANSIENT TABLE AMAZONE_BOOKS (
	BOOK_ID NUMBER(38, 0) NOT NULL
	,BOOK_TITLE VARCHAR(16777216)
	,BOOK_AMOUNT FLOAT
	,BOOK_AUTHOR VARCHAR(16777216)
	,BOOK_RATING FLOAT
	,BOOK_LINK VARCHAR(16777216)
	,BUSINESS_DATE DATE
    ,FILE_DATE_PARTITION NUMBER(10,0)
	);


SELECT COUNT(*) FROM AMAZONE_BOOKS;

SELECT * from AMAZONE_BOOKS;
TRUNCATE AMAZONE_BOOKS;

INSERT INTO AMAZONE_BOOKS 
SELECT BOOK_ID,BOOK_TITLE,BOOK_AMOUNT,BOOK_AUTHOR,BOOK_RATING,BOOK_LINK,BUSINESS_DATE FROM AMAZONE_BOOKS_EXT WHERE BUSINESS_DATE > '2024-01-01';

SELECT * FROM CONFIG.TABLE_CONFIG;

-- COPY INTO AMAZONE_BOOKS FROM @amazone_books_ext_stage PATTERN = '.*20240227-amazone-books.csv';

-- SELECT DISTINCT BUSINESS_DATE FROM AMAZONE_BOOKS;

-- COPY INTO AMAZONE_BOOKS FROM @amazone_books_ext_stage PATTERN = '.*20240228/20240228-amazone-books.csv';

-- SELECT DISTINCT BUSINESS_DATE FROM AMAZONE_BOOKS;
-- s3://lz-snowflake/Snowflake/amazonebooks_external/amazone_books/20240228/20240228-amazone-books.csv


SELECT  t.$1 as col1 FROM @amazone_books_ext_stage t;


SELECT BOOK_ID,BOOK_TITLE,BOOK_AMOUNT,BOOK_AUTHOR,BOOK_RATING,BOOK_LINK,BUSINESS_DATE FROM AMAZONE_BOOKS_EXT WHERE BUSINESS_DATE > '2024-02-29';

SELECT DISTINCT(BUSINESS_DATE) FROM  AMAZONE_BOOKS_EXT;
SELECT DISTINCT(BUSINESS_DATE) FROM AMAZONE_BOOKS;

SELECT 
(SELECT count(*) FROM  AMAZONE_BOOKS_EXT) as AMAZONE_BOOKS_EXT,
(SELECT count(*) FROM AMAZONE_BOOKS) as AMAZONE_BOOKS;

DELETE FROM AMAZONE_BOOKS WHERE BUSINESS_DATE = '2024-03-01';


SELECT * FROM AMAZONE_BOOKS limit 10;


